[{"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/index.js":"1","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/App.js":"2","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/Store.js":"3","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/constants.js":"4","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/HomeScreen.js":"5","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/QueueScreen.js":"6","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/AdminScreen.js":"7","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/PaymentScreen.js":"8","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/ReviewScreen.js":"9","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/SelectPaymentScreen.js":"10","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/OrderScreen.js":"11","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/ChooseScreen.js":"12","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/CompleteOrderScreen.js":"13","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/styles.js":"14","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/actions.js":"15","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/components/Logo.js":"16","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/components/SummaryFooter.js":"17"},{"size":257,"mtime":1623692176486,"results":"18","hashOfConfig":"19"},{"size":2409,"mtime":1623848961206,"results":"20","hashOfConfig":"19"},{"size":5289,"mtime":1624453567527,"results":"21","hashOfConfig":"19"},{"size":1202,"mtime":1623692176485,"results":"22","hashOfConfig":"19"},{"size":1184,"mtime":1623850087100,"results":"23","hashOfConfig":"19"},{"size":1797,"mtime":1623692176488,"results":"24","hashOfConfig":"19"},{"size":4165,"mtime":1623852281834,"results":"25","hashOfConfig":"19"},{"size":1022,"mtime":1623692176488,"results":"26","hashOfConfig":"19"},{"size":6163,"mtime":1624454376877,"results":"27","hashOfConfig":"19"},{"size":2421,"mtime":1623853368761,"results":"28","hashOfConfig":"19"},{"size":8503,"mtime":1624454630086,"results":"29","hashOfConfig":"19"},{"size":2446,"mtime":1623850170041,"results":"30","hashOfConfig":"19"},{"size":2096,"mtime":1623853475000,"results":"31","hashOfConfig":"19"},{"size":2016,"mtime":1624452826434,"results":"32","hashOfConfig":"19"},{"size":3179,"mtime":1623692176485,"results":"33","hashOfConfig":"19"},{"size":243,"mtime":1623849454068,"results":"34","hashOfConfig":"19"},{"size":468,"mtime":1624453075155,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ws24aq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/index.js",[],["77","78"],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/App.js",["79"],"import {\n  Container,\n  CssBaseline,\n  Paper,\n  ThemeProvider,\n} from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { Store } from './Store';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport ChooseScreen from './screens/ChooseScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport QueueScreen from './screens/QueueScreen';\nimport { createMuiTheme } from '@material-ui/core';\nimport ReviewScreen from './screens/ReviewScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport SelectPaymentScreen from './screens/SelectPaymentScreen';\nimport CompleteOrderScreen from './screens/CompleteOrderScreen';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\n\nconst theme = createMuiTheme({\n  typography: {\n    h1: { fontWeight: 'bold' },\n    h2: {\n      fontSize: '2rem',\n      color: 'black',\n    },\n    h3: {\n      fontSize: '1.8rem',\n      fontWeight: 'bold',\n      color: 'white',\n    },\n  },\n  palette: {\n    primary: { main: '#ff1744' },\n    secondary: {\n      main: '#118e16',\n      contrastText: '#ffffff',\n    },\n  },\n});\nfunction App() {\n  const { state } = useContext(Store);\n  const widthScreen = true;\n\n  return (\n    <BrowserRouter>\n      <Helmet>\n        <title>Self-Order Kiosk</title>\n      </Helmet>\n\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth={widthScreen ? 'lg' : 'sm'}>\n          <Paper>\n            <Route path=\"/\" component={HomeScreen} exact></Route>\n            <Route path=\"/admin\" component={AdminScreen} exact></Route>\n            <Route path=\"/queue\" component={QueueScreen} exact></Route>\n            <Route path=\"/choose\" component={ChooseScreen} exact></Route>\n            <Route path=\"/order\" component={OrderScreen} exact></Route>\n            <Route path=\"/review\" component={ReviewScreen} exact></Route>\n            <Route\n              path=\"/select-payment\"\n              component={SelectPaymentScreen}\n              exact\n            ></Route>\n            <Route path=\"/payment\" component={PaymentScreen} exact></Route>\n            <Route\n              path=\"/complete\"\n              component={CompleteOrderScreen}\n              exact\n            ></Route>\n          </Paper>\n        </Container>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/Store.js",["80"],"import React, { createContext, useReducer } from 'react';\nimport useReducerWithThunk from 'use-reducer-thunk';\nimport {\n  ORDER_ADD_ITEM,\n  ORDER_REMOVE_ITEM,\n  ORDER_CLEAR,\n  CATEGORY_LIST_FAIL,\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  ORDER_SET_TYPE,\n  ORDER_SET_PAYMENT_TYPE,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_REQUEST,\n  SCREEN_SET_WIDTH,\n  ORDER_QUEUE_LIST_REQUEST,\n  ORDER_QUEUE_LIST_SUCCESS,\n  ORDER_QUEUE_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n} from './constants';\n\nexport const Store = createContext();\n\nconst initialState = {\n  widthScreen: false,\n  orderList: { loading: true },\n  queueList: { loading: true },\n  categoryList: { loading: true },\n  productList: { loading: true },\n  order: {\n    orderItems: [],\n    orderType: 'Eat in',\n    paymentType: 'Pay here',\n    taxPrice: 0,\n    totalPrice: 0,\n    itemsCount: 0,\n  },\n  orderCreate: { loading: true },\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case SCREEN_SET_WIDTH:\n      return {\n        ...state,\n        widthScreen: true,\n      };\n    case ORDER_SET_TYPE:\n      return {\n        ...state,\n        order: { ...state.order, orderType: action.payload },\n      };\n    case ORDER_SET_PAYMENT_TYPE:\n      return {\n        ...state,\n        order: { ...state.order, paymentType: action.payload },\n      };\n    case CATEGORY_LIST_REQUEST:\n      return { ...state, categoryList: { loading: true } };\n    case CATEGORY_LIST_SUCCESS:\n      return {\n        ...state,\n        categoryList: { loading: false, categories: action.payload },\n      };\n    case CATEGORY_LIST_FAIL:\n      return {\n        ...state,\n        categoryList: { loading: false, error: action.payload },\n      };\n    case PRODUCT_LIST_REQUEST:\n      return { ...state, productList: { loading: true } };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        ...state,\n        productList: { loading: false, products: action.payload },\n      };\n    case PRODUCT_LIST_FAIL:\n      return {\n        ...state,\n        productList: { loading: false, error: action.payload },\n      };\n    case ORDER_QUEUE_LIST_REQUEST:\n      return { ...state, queueList: { loading: true } };\n    case ORDER_QUEUE_LIST_SUCCESS:\n      return {\n        ...state,\n        queueList: { loading: false, queue: action.payload },\n      };\n    case ORDER_QUEUE_LIST_FAIL:\n      return {\n        ...state,\n        queueList: { loading: false, error: action.payload },\n      };\n    case ORDER_LIST_REQUEST:\n      return { ...state, orderList: { loading: true } };\n    case ORDER_LIST_SUCCESS:\n      return {\n        ...state,\n        orderList: { loading: false, orders: action.payload },\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        ...state,\n        orderList: { loading: false, error: action.payload },\n      };\n    case ORDER_CREATE_REQUEST:\n      return { ...state, orderCreate: { loading: true } };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        ...state,\n        orderCreate: { loading: false, newOrder: action.payload },\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        ...state,\n        orderCreate: { loading: false, error: action.payload },\n      };\n    case ORDER_ADD_ITEM: {\n      const item = action.payload;\n      const existItem = state.order.orderItems.find(\n        (x) => x.name === item.name\n      );\n      const orderItems = existItem\n        ? state.order.orderItems.map((x) =>\n            x.name === existItem.name ? item : x\n          )\n        : [...state.order.orderItems, item];\n\n      const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\n      const itemsPrice = orderItems.reduce(\n        (a, c) => a + c.quantity * c.price,\n        0\n      );\n      const taxPrice = 0;// Math.round(0.15 * itemsPrice * 100) / 100;\n      const totalPrice = Math.round((itemsPrice + taxPrice) * 100) / 100;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          orderItems,\n          taxPrice,\n          totalPrice,\n          itemsCount,\n        },\n      };\n    }\n    case ORDER_REMOVE_ITEM:\n      const orderItems = state.order.orderItems.filter(\n        (x) => x.name !== action.payload.name\n      );\n      const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\n      const itemsPrice = orderItems.reduce(\n        (a, c) => a + c.quantity * c.price,\n        0\n      );\n      const taxPrice = Math.round(0.15 * itemsPrice * 100) / 100;\n      const totalPrice = Math.round((itemsPrice + taxPrice) * 100) / 100;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          orderItems,\n          taxPrice,\n          totalPrice,\n          itemsCount,\n        },\n      };\n\n    case ORDER_CLEAR:\n      return {\n        ...state,\n        order: {\n          orderItems: [],\n          taxPrice: 0,\n          totalPrice: 0,\n          itemsCount: 0,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  //const [state, dispatch] = useReducerWithThunk(reducer, initialState, 'example');\n\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/constants.js",[],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/HomeScreen.js",[],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/QueueScreen.js",["81"],"import React, { useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { listQueue } from '../actions';\nimport {\n  Box,\n  CircularProgress,\n  Grid,\n  List,\n  ListItem,\n  Paper,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport { Alert } from '@material-ui/lab';\nimport { Helmet } from 'react-helmet';\nexport default function QueueScreen(props) {\n  const styles = useStyles();\n\n  const { state, dispatch } = useContext(Store);\n  const { queue, loading, error } = state.queueList;\n\n  useEffect(() => {\n    listQueue(dispatch);\n  }, []);\n\n  return (\n    <Box className={[styles.root]}>\n      <Helmet>\n        <title>Queue</title>\n      </Helmet>\n      <Box className={[styles.main]}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <Grid container spacing={2}>\n            <Grid item md={6}>\n              <Paper>\n                <h1 className={styles.processing}>In Progress</h1>\n                <List>\n                  {queue.inProgressOrders.map((order) => (\n                    <ListItem key={order.number}>\n                      <h1>{order.number}</h1>\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Grid>\n            <Grid item md={6}>\n              <Paper>\n                <h1 className={styles.ready}>Now Serving </h1>\n                <List>\n                  {queue.servingOrders.map((order) => (\n                    <ListItem key={order.number}>\n                      <h1>{order.number}</h1>\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/AdminScreen.js",["82"],"import React, { useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { listOrders } from '../actions';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport { Alert } from '@material-ui/lab';\nimport Axios from 'axios';\nimport { Helmet } from 'react-helmet';\nexport default function AdminScreen(props) {\n  const styles = useStyles();\n\n  const { state, dispatch } = useContext(Store);\n  const { orders, loading, error } = state.orderList;\n  const setOrderStateHandler = async (order, action) => {\n    try {\n      await Axios.put('/api/orders/' + order._id, {\n        action: action,\n      });\n      listOrders(dispatch);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  useEffect(() => {\n    listOrders(dispatch);\n  }, []);\n\n  return (\n    <Box className={[styles.root]}>\n      <Helmet>\n        <title>Admin Orders</title>\n      </Helmet>\n\n      <Box className={[styles.main]}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table aria-label=\"Orders\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order Number</TableCell>\n                  <TableCell align=\"right\">Price&nbsp;(€)</TableCell>\n                  <TableCell align=\"right\">Count</TableCell>\n                  <TableCell align=\"right\">Items</TableCell>\n                  <TableCell align=\"right\">Type</TableCell>\n                  <TableCell align=\"right\">Payment</TableCell>\n                  <TableCell align=\"right\">State</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map((order) => (\n                  <TableRow key={order.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {order.number}\n                    </TableCell>\n                    <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                    <TableCell align=\"right\">\n                      {order.orderItems.length}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {order.orderItems.map((item) => (\n                        <Box>\n                          {item.name} x {item.quantity}\n                        </Box>\n                      ))}\n                    </TableCell>\n                    <TableCell align=\"right\">{order.orderType}</TableCell>\n                    <TableCell align=\"right\">{order.paymentType}</TableCell>\n                    <TableCell align=\"right\">\n                      {order.inProgress\n                        ? 'In Progress'\n                        : order.isReady\n                        ? 'Ready'\n                        : order.isDelivered\n                        ? 'Delivered'\n                        : 'Unknown'}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'ready')}\n                        color=\"secondary\"\n                      >\n                        Ready\n                      </Button>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'cancel')}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'deliver')}\n                      >\n                        Deliver\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/PaymentScreen.js",[],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/ReviewScreen.js",["83"],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/SelectPaymentScreen.js",[],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/OrderScreen.js",["84","85","86"],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/ChooseScreen.js",[],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/screens/CompleteOrderScreen.js",["87"],"import React, { useContext, useEffect } from 'react';\nimport { Box, Button, CircularProgress, Typography } from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nimport { Store } from '../Store';\nimport { Alert } from '@material-ui/lab';\nimport { createOrder } from '../actions';\nexport default function CompleteOrderScreen(props) {\n  const styles = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const { order } = state;\n  const { loading, error, newOrder } = state.orderCreate;\n\n  useEffect(() => {\n    if (order.orderItems.length > 0) {\n      createOrder(dispatch, order);\n    }\n  }, [order]);\n\n  return (\n    <Box className={[\"complete-order-container\", styles.root]}>\n      <Box className={[styles.main, styles.center]}>\n        <Box>\n          <Logo large></Logo>\n          {loading ? (\n            <CircularProgress></CircularProgress>\n          ) : error ? (\n            <Alert severity=\"error\">{error}</Alert>\n          ) : (\n            <>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h3\"\n                component=\"h3\"\n              >\n                Your order has been placed\n              </Typography>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h1\"\n                component=\"h1\"\n              >\n                Thank you!\n              </Typography>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h3\"\n                component=\"h3\"\n              >\n                Your order number is {newOrder.number}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </Box>\n      <Box className={[styles.center, styles.space]}>\n        <Button\n          onClick={() => props.history.push('/')}\n          variant=\"contained\"\n          color=\"primary\"\n          className={styles.largeButton}\n        >\n          Order Again\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/styles.js",[],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/actions.js",[],"/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/components/Logo.js",["88"],"import React from 'react';\nimport { useStyles } from '../styles';\n\nexport default function Logo(props) {\n  // const styles = useStyles();\n  return (\n    <img\n      src=\"logo.png\"\n      alt=\"Delice\"\n      className={\"logo \"}\n    ></img>\n  );\n}\n","/Users/shivamshrivastava/shivam/anshul-delice/self-order-kiosk/src/components/SummaryFooter.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":45,"column":11,"nodeType":"95","messageId":"96","endLine":45,"endColumn":16},{"ruleId":"93","severity":1,"message":"97","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":23,"column":6,"nodeType":"100","endLine":23,"endColumn":8,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"99","line":38,"column":6,"nodeType":"100","endLine":38,"endColumn":8,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":29,"column":5,"nodeType":"95","messageId":"96","endLine":29,"endColumn":13},{"ruleId":"93","severity":1,"message":"103","line":48,"column":5,"nodeType":"95","messageId":"96","endLine":48,"endColumn":13},{"ruleId":"93","severity":1,"message":"104","line":49,"column":5,"nodeType":"95","messageId":"96","endLine":49,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":81,"column":6,"nodeType":"100","endLine":81,"endColumn":32,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"99","line":18,"column":6,"nodeType":"100","endLine":18,"endColumn":13,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"107","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":19},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'useReducerWithThunk' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["110"],["111"],"'taxPrice' is assigned a value but never used.","'orderType' is assigned a value but never used.",["112"],["113"],"'useStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [dispatch]",{"range":"121","text":"122"},{"range":"123","text":"122"},"Update the dependencies array to be: [categories, categoryName, dispatch]",{"range":"124","text":"125"},"Update the dependencies array to be: [dispatch, order]",{"range":"126","text":"127"},[578,580],"[dispatch]",[907,909],[1893,1919],"[categories, categoryName, dispatch]",[653,660],"[dispatch, order]"]